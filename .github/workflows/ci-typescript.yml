name: CI-Typescript
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

# Ensure we only ever have one build running at a time.
# If we push twice in quick succession, the first build will be stopped once the second starts.
# This avoids multiple deploys happening in quick succession causing AWS rate exceeded errors
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      modules-changed: ${{ steps.filter.outputs.modules }}
      lambdas-changed: ${{ steps.filter.outputs.changes }}
      any-lambda-changed: ${{ steps.check-lambdas.outputs.any-changed }}
      lambdas-to-build: ${{ steps.check-lambdas.outputs.lambdas-to-build }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          list-files: 'json'
          filters: |
            modules:
              - 'modules/**'
              - 'package.json'
              - 'pnpm-workspace.yaml'
              - 'tsconfig.json'
              - '.github/workflows/**'
            user-benefits:
              - 'handlers/user-benefits/**'
            press-reader-entitlements:
              - 'handlers/press-reader-entitlements/**'
            ticket-tailor-webhook:
              - 'handlers/ticket-tailor-webhook/**'
            update-supporter-plus-amount:
              - 'handlers/update-supporter-plus-amount/**'
            product-switch-api:
              - 'handlers/product-switch-api/**'
            generate-product-catalog:
              - 'handlers/generate-product-catalog/**'
            alarms-handler:
              - 'handlers/alarms-handler/**'
            discount-api:
              - 'handlers/discount-api/**'
            stripe-disputes:
              - 'handlers/stripe-disputes/**'
            discount-expiry-notifier:
              - 'handlers/discount-expiry-notifier/**'
            salesforce-disaster-recovery:
              - 'handlers/salesforce-disaster-recovery/**'
            salesforce-disaster-recovery-health-check:
              - 'handlers/salesforce-disaster-recovery-health-check/**'
            salesforce-event-bus:
              - 'handlers/salesforce-event-bus/**'
            zuora-salesforce-link-remover:
              - 'handlers/zuora-salesforce-link-remover/**'
            metric-push-api:
              - 'handlers/metric-push-api/**'
            observer-data-export:
              - 'handlers/observer-data-export/**'
            negative-invoices-processor:
              - 'handlers/negative-invoices-processor/**'
            write-off-unpaid-invoices:
              - 'handlers/write-off-unpaid-invoices/**'
            mparticle-api:
              - 'handlers/mparticle-api/**'
      - name: Check if any lambda changed
        id: check-lambdas
        run: |
          # If modules changed, we need to build ALL lambdas
          if [[ "${{ steps.filter.outputs.modules }}" == "true" ]]; then
            echo "any-changed=true" >> $GITHUB_OUTPUT
            # Set all lambdas to be built when modules change
            echo 'lambdas-to-build=["user-benefits","press-reader-entitlements","ticket-tailor-webhook","update-supporter-plus-amount","product-switch-api","generate-product-catalog","alarms-handler","discount-api","stripe-disputes","discount-expiry-notifier","salesforce-disaster-recovery","salesforce-disaster-recovery-health-check","salesforce-event-bus","zuora-salesforce-link-remover","metric-push-api","observer-data-export","negative-invoices-processor","write-off-unpaid-invoices","mparticle-api"]' >> $GITHUB_OUTPUT
          elif [[ "${{ steps.filter.outputs.changes }}" != "[]" ]]; then
            echo "any-changed=true" >> $GITHUB_OUTPUT
            # Only build changed lambdas
            echo "lambdas-to-build=${{ steps.filter.outputs.changes }}" >> $GITHUB_OUTPUT
          else
            echo "any-changed=false" >> $GITHUB_OUTPUT
            echo "lambdas-to-build=[]" >> $GITHUB_OUTPUT
          fi

  common:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.any-lambda-changed == 'true'
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
      - run: npm install --global corepack@0.31.0
      - run: corepack enable
        shell: bash
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm --filter "./modules/**" check-formatting
      - run: pnpm --filter "./modules/**" build
      - run: pnpm --filter "./modules/**" lint
      - run: pnpm --filter "./modules/**" test

  gu-cdk-build:
    needs: [common, detect-changes]
    if: needs.detect-changes.outputs.any-lambda-changed == 'true'
    strategy:
      matrix:
        subproject: ${{ fromJson(needs.detect-changes.outputs.lambdas-to-build) }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
      - run: npm install --global corepack@0.31.0
      - run: corepack enable
        shell: bash
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm --filter cdk package
      - run: pnpm --filter ${{ matrix.subproject }} package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.GU_RIFF_RAFF_ROLE_ARN }}
          aws-region: eu-west-1

      - name: Upload to Riff-Raff
        uses: guardian/actions-riff-raff@v4
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          roleArn: ${{ secrets.GU_RIFF_RAFF_ROLE_ARN }}
          projectName: support-service-lambdas::${{ matrix.subproject }}
          buildNumberOffset: 7000
          configPath: ./handlers/${{ matrix.subproject }}/riff-raff.yaml
          commentingEnabled: 'false'
          contentDirectories: |
            ${{ matrix.subproject }}-cloudformation:
              - ./cdk/cdk.out
            ${{ matrix.subproject }}:
              - ./handlers/${{ matrix.subproject }}/target/${{ matrix.subproject }}.zip
