// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The SoftOptInConsentSetter stack matches the snapshot 1`] = `
{
  "Conditions": {
    "IsProd": {
      "Fn::Equals": [
        "TEST",
        "PROD",
      ],
    },
  },
  "Metadata": {
    "gu:cdk:constructs": [
      "GuDistributionBucketParameter",
      "GuScheduledLambda",
      "GuLambdaFunction",
    ],
    "gu:cdk:version": "TEST",
  },
  "Parameters": {
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "MobileAccountIdParameter": {
      "Default": "mobileAccountId",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "LambdaFunction": {
      "DependsOn": [
        "LambdaFunctionRoleDefaultPolicy5A080877",
        "LambdaFunctionRole9F417943",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "membership/TEST/soft-opt-in-consent-setter/soft-opt-in-consent-setter.jar",
        },
        "Environment": {
          "Variables": {
            "APP": "soft-opt-in-consent-setter",
            "STACK": "membership",
            "STAGE": "TEST",
            "Stage": "TEST",
            "sfApiVersion": "v46.0",
          },
        },
        "FunctionName": "soft-opt-in-consent-setter-TEST",
        "Handler": "com.gu.soft_opt_in_consent_setter.Handler::handleRequest",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "LambdaFunctionRole9F417943",
            "Arn",
          ],
        },
        "Runtime": "java11",
        "Tags": [
          {
            "Key": "App",
            "Value": "soft-opt-in-consent-setter",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-service-lambdas",
          },
          {
            "Key": "Stack",
            "Value": "membership",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaFunctionIAP": {
      "DependsOn": [
        "LambdaFunctionIAPRoleDefaultPolicyDBABFBD9",
        "LambdaFunctionIAPRoleE662CE52",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "membership/TEST/soft-opt-in-consent-setter/soft-opt-in-consent-setter.jar",
        },
        "Environment": {
          "Variables": {
            "APP": "soft-opt-in-consent-setter",
            "STACK": "membership",
            "STAGE": "TEST",
            "Stage": "TEST",
            "sfApiVersion": "v56.0",
          },
        },
        "FunctionName": "soft-opt-in-consent-setter-IAP-TEST",
        "Handler": "com.gu.soft_opt_in_consent_setter.HandlerIAP::handleRequest",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "LambdaFunctionIAPRoleE662CE52",
            "Arn",
          ],
        },
        "Runtime": "java11",
        "Tags": [
          {
            "Key": "App",
            "Value": "soft-opt-in-consent-setter",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-service-lambdas",
          },
          {
            "Key": "Stack",
            "Value": "membership",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaFunctionIAPRoleDefaultPolicyDBABFBD9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:dynamodb:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/soft-opt-in-consent-setter-TEST-logging",
                  ],
                ],
              },
            },
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SoftOptInsQueue",
                  "Arn",
                ],
              },
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3::*:membership-dist/*",
              "Sid": "readDeployedArtefact",
            },
            {
              "Action": [
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetSecretValue",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:CODE/Salesforce/ConnectedApp/AwsConnectorSandbox-jaCgRl",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:PROD/Salesforce/ConnectedApp/TouchpointUpdate-lolLqP",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:CODE/Salesforce/User/SoftOptInConsentSetterAPIUser-KjHQBG",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:PROD/Salesforce/User/SoftOptInConsentSetterAPIUser-EonJb0",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:CODE/Identity/SoftOptInConsentAPI-n7Elrb",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:PROD/Identity/SoftOptInConsentAPI-sJJo2s",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:CODE/MobilePurchasesAPI/User/GetSubscriptions-iCUzGN",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:PROD/MobilePurchasesAPI/User/GetSubscriptions-HZuC6H",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/membership/TEST/soft-opt-in-consent-setter/soft-opt-in-consent-setter.jar",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/membership/soft-opt-in-consent-setter",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/membership/soft-opt-in-consent-setter/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaFunctionIAPRoleDefaultPolicyDBABFBD9",
        "Roles": [
          {
            "Ref": "LambdaFunctionIAPRoleE662CE52",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaFunctionIAPRoleE662CE52": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "membership-TEST-soft-opt-in-consent-setter-LambdaFunctionIAPRole",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-service-lambdas",
          },
          {
            "Key": "Stack",
            "Value": "membership",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaFunctionLambdaFunctionrate365days0AllowEventRuleSoftOptInConsentSetterLambdaFunction363F905D5596A778": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "LambdaFunctionLambdaFunctionrate365days0BEB06DB4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaFunctionLambdaFunctionrate365days0BEB06DB4": {
      "Properties": {
        "Description": "Runs Soft Opt-In Consent Setter",
        "ScheduleExpression": "rate(365 days)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "LambdaFunction",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "LambdaFunctionRole9F417943": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "membership-TEST-soft-opt-in-consent-setter-LambdaFunctionRole",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-service-lambdas",
          },
          {
            "Key": "Stack",
            "Value": "membership",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaFunctionRoleDefaultPolicy5A080877": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3::*:membership-dist/*",
              "Sid": "readDeployedArtefact",
            },
            {
              "Action": [
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetSecretValue",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:CODE/Salesforce/ConnectedApp/AwsConnectorSandbox-jaCgRl",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:PROD/Salesforce/ConnectedApp/TouchpointUpdate-lolLqP",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:CODE/Salesforce/User/SoftOptInConsentSetterAPIUser-KjHQBG",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:PROD/Salesforce/User/SoftOptInConsentSetterAPIUser-EonJb0",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:CODE/Identity/SoftOptInConsentAPI-n7Elrb",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:PROD/Identity/SoftOptInConsentAPI-sJJo2s",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:CODE/MobilePurchasesAPI/User/GetSubscriptions-iCUzGN",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:PROD/MobilePurchasesAPI/User/GetSubscriptions-HZuC6H",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/membership/TEST/soft-opt-in-consent-setter/soft-opt-in-consent-setter.jar",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/membership/soft-opt-in-consent-setter",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/membership/soft-opt-in-consent-setter/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaFunctionRoleDefaultPolicy5A080877",
        "Roles": [
          {
            "Ref": "LambdaFunctionRole9F417943",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SQSTrigger": {
      "Properties": {
        "BatchSize": 1,
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "SoftOptInsQueue",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "LambdaFunctionIAP",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "SoftOptInToSQSRuleA7A6FB25": {
      "Properties": {
        "Description": "Send all events received via support-workers onto soft opt-in SQS queue",
        "EventBusName": "acquisitions-bus-CODE",
        "EventPattern": {
          "region": [
            "eu-west-1",
          ],
          "source": [
            "support-workers.1",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "SoftOptInsQueue",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "detail-identityId": "$.detail.identityId",
                "detail-printOptions-product": "$.detail.printOptions.product",
                "detail-product": "$.detail.product",
                "detail-similarProductsConsent": "$.detail.similarProductsConsent",
                "detail-zuoraSubscriptionNumber": "$.detail.zuoraSubscriptionNumber",
              },
              "InputTemplate": "{"subscriptionId":<detail-zuoraSubscriptionNumber>,"identityId":<detail-identityId>,"eventType":"Acquisition","productName":<detail-product>,"printProduct":<detail-printOptions-product>,"previousProductName":null,"userConsentsOverrides":{"similarGuardianProducts":<detail-similarProductsConsent>}}",
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "SoftOptInsDeadLetterQueue": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "MessageRetentionPeriod": 864000,
        "QueueName": "soft-opt-in-consent-setter-dead-letter-queue-TEST",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-service-lambdas",
          },
          {
            "Key": "Stack",
            "Value": "membership",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "SoftOptInsLoggingTable": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "identityId",
            "AttributeType": "S",
          },
          {
            "AttributeName": "timestamp",
            "AttributeType": "N",
          },
          {
            "AttributeName": "subscriptionId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "subscriptionId-index",
            "KeySchema": [
              {
                "AttributeName": "subscriptionId",
                "KeyType": "HASH",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "identityId",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "timestamp",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "TableName": "soft-opt-in-consent-setter-TEST-logging",
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-service-lambdas",
          },
          {
            "Key": "Stack",
            "Value": "membership",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "SoftOptInsQueue": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "soft-opt-in-consent-setter-queue-TEST",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "SoftOptInsDeadLetterQueue",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-service-lambdas",
          },
          {
            "Key": "Stack",
            "Value": "membership",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VisibilityTimeout": 3000,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "SoftOptInsQueueCrossAccountRoleACEC94E0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "MobileAccountIdParameter",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "sqs:SendMessage",
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "SoftOptInsQueue",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SQSAccess",
          },
        ],
        "RoleName": "membership-TEST-soft-opt-in-consent-setter-QueueCrossAccountRole",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-service-lambdas",
          },
          {
            "Key": "Stack",
            "Value": "membership",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SoftOptInsQueuePolicy3349F3C5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "SoftOptInToSQSRuleA7A6FB25",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "SoftOptInsQueue",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "SoftOptInsQueue",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "deadLetterBuildUpAlarmIAP": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":alarms-handler-topic-PROD",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm when the dead letter queue accumulates messages.",
        "AlarmName": "soft-opt-in-consent-setter-IAP-TEST failed and sent a message to the dead letter queue.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "QueueName",
            "Value": {
              "Fn::GetAtt": [
                "SoftOptInsDeadLetterQueue",
                "QueueName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Namespace": "AWS/SQS",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "exceptionsAlarmIAP": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":alarms-handler-topic-PROD",
              ],
            ],
          },
        ],
        "AlarmDescription": "Five or more errors for the IAP Lambda. See GitHub README for details.",
        "AlarmName": "soft-opt-in-consent-setter-IAP-TEST threw an exception",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "LambdaFunctionIAP",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 3600,
        "Statistic": "Sum",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "failedDynamoUpdateAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":alarms-handler-topic-PROD",
              ],
            ],
          },
        ],
        "AlarmDescription": "A run failed to update the Dynamo logging table in the last hour.",
        "AlarmName": "soft-opt-in-consent-setter-TEST failed to update the Dynamo logging table.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "Stage",
            "Value": "TEST",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "failed_dynamo_update",
        "Namespace": "soft-opt-in-consent-setter",
        "Period": 3600,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "failedRunAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":alarms-handler-topic-PROD",
              ],
            ],
          },
        ],
        "AlarmDescription": "Five or more runs found an error and were unable to complete. See GitHub README for details.",
        "AlarmName": "soft-opt-in-consent-setter-TEST failed to run",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "LambdaFunction",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 3600,
        "Statistic": "Sum",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "failedUpdateAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":alarms-handler-topic-PROD",
              ],
            ],
          },
        ],
        "AlarmDescription": "A run failed to update some Salesforce records in the last hour.",
        "AlarmName": "soft-opt-in-consent-setter-TEST failed to update Salesforce records",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "Stage",
            "Value": "TEST",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "failed_salesforce_update",
        "Namespace": "soft-opt-in-consent-setter",
        "Period": 3600,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
}
`;
