#!/bin/bash -e
# This is an internally used script to automatically produce an index of templates
script_name=$(basename "$0")

echo "$script_name: START generating template list..."

script_dir=$(readlink -f "$(dirname "${BASH_SOURCE[0]}")")
buildcheck_dir=$(readlink -f "$script_dir/../..")
repo_root=$(readlink -f "$buildcheck_dir/..")
echo "buildcheck_dir: $buildcheck_dir"
src_dir="$buildcheck_dir/src"
data_dir="$buildcheck_dir/data"
template_dir="$data_dir/templates"
generated_dir="$src_dir/dynamic/generated"
output_file="$generated_dir/generatedMappings.ts"

[[ -d "$generated_dir" ]] || mkdir $generated_dir

template_files=()
while IFS= read -r -d '' file; do
    rel_path="${file#$template_dir/}"
    name_without_ext="${rel_path%.ts}"
    template_files+=("$name_without_ext")
done < <(find "$template_dir" -name "*.ts" -type f -print0 | sort -z)

echo -n "" > "$output_file" # empty the file

# Generate imports
for name_without_ext in "${template_files[@]}"; do
    import_name=$(echo "$name_without_ext" | sed 's/[^a-zA-Z0-9]/_/g')
    echo "import $import_name from '../../../data/templates/$name_without_ext';"
done >> "$output_file"
echo "import { type Template } from '../templater';" >> "$output_file"

echo "" >> "$output_file"
echo "/*" >> "$output_file"
echo " * This file is gitignored and edits will be overwritten." >> "$output_file"
echo " * Generated by $0" >> "$output_file"
echo " * Generated on $(date)" >> "$output_file"
echo " */" >> "$output_file"

# Find direct children (subdirectories) of template_dir
subdirs=()
while IFS= read -r -d '' subdir; do
    subdir_name=$(basename "$subdir")
    subdirs+=("$subdir_name")
done < <(find "$template_dir" -mindepth 1 -maxdepth 1 -type d -print0 | sort -z)

# Generate const for each subdirectory
for subdir_name in "${subdirs[@]}"; do
    echo "" >> "$output_file"
    const_name=$(echo "${subdir_name}" | sed 's/[^a-zA-Z0-9]/_/g')
    capitalized_const_name=$(echo "${const_name}" |awk '{print toupper(substr($0,0,1)) substr($0,2)}')
    echo "export const ${const_name}Templates: Template[] = [" >> "$output_file"

    # Find templates in this subdirectory
    while IFS= read -r -d '' file; do
        from_repo_root="${file#$repo_root/}"
        rel_path="${file#$template_dir/}"
        name_without_ext="${rel_path%.ts}"
        import_name=$(echo "$name_without_ext" | sed 's/[^a-zA-Z0-9]/_/g')
        template_name="${name_without_ext#*/}"
        echo "  { name: \"$template_name\", template: $import_name, templatePath: \"$from_repo_root\" },"
    done < <(find "$template_dir/$subdir_name" -name "*.ts" -type f -print0 | sort -z) >> "$output_file"

    echo "];" >> "$output_file"
done

echo "$script_name: FINISH wrote ${#template_files[@]} templates to $output_file"
