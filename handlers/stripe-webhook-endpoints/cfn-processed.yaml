{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Endpoints to handle stripe webhooks",
  "Parameters": {
    "App": {
      "Description": "Endpoints to handle stripe webhooks",
      "Type": "String",
      "Default": "stripe-webhook-endpoints"
    },
    "DeployBucket": {
      "Description": "Bucket to copy files to",
      "Type": "String",
      "Default": "membership-dist"
    },
    "Stack": {
      "Description": "Stack name",
      "Type": "String",
      "Default": "membership"
    },
    "Stage": {
      "Description": "Set by RiffRaff on each deploy",
      "Type": "String",
      "AllowedValues": [
        "CODE",
        "PROD"
      ]
    }
  },
  "Resources": {
    "PaymentIntentIssuesLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket"
          },
          "S3Key": {
            "Fn::Sub": "${Stack}/${Stage}/${App}/${App}.jar"
          }
        },
        "Description": "A lambda for handling payment intent issues (cancellation, failure, action required)",
        "FunctionName": {
          "Fn::Sub": "stripe-payment-intent-issues-${Stage}"
        },
        "Handler": "com.gu.paymentIntentIssues.Lambda::handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "PaymentIntentIssuesLambdaRole",
            "Arn"
          ]
        },
        "Runtime": "java11",
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "App": "payment-intent-issues",
            "Stack": {
              "Ref": "Stack"
            },
            "Stage": {
              "Ref": "Stage"
            }
          }
        },
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "CustomerUpdatedLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket"
          },
          "S3Key": {
            "Fn::Sub": "${Stack}/${Stage}/${App}/${App}.jar"
          }
        },
        "Description": "A lambda for handling customer updates",
        "FunctionName": {
          "Fn::Sub": "stripe-customer-updated-${Stage}"
        },
        "Handler": "com.gu.stripeCardUpdated.Lambda::apply",
        "MemorySize": 1536,
        "Role": {
          "Fn::GetAtt": [
            "CustomerUpdatedLambdaRole",
            "Arn"
          ]
        },
        "Runtime": "java11",
        "Timeout": 900,
        "Environment": {
          "Variables": {
            "App": "stripe-customer-updated",
            "Stack": {
              "Ref": "Stack"
            },
            "Stage": {
              "Ref": "Stage"
            }
          }
        },
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "CustomerUpdatedLambdaAcquisitionEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "CustomerUpdatedLambda"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/customer-updated",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "ServerlessRestApiProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeployment45fedb208d"
        },
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Prod"
      }
    },
    "CustomerUpdatedLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "CustomerUpdatedLambdaRolePolicy1",
            "PolicyDocument": {
              "Statement": {
                "Effect": "Allow",
                "Action": [
                  "ssm:GetParametersByPath"
                ],
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/membership/payment-intent-issues"
                  }
                ]
              }
            }
          },
          {
            "PolicyName": "CustomerUpdatedLambdaRolePolicy2",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:GetObject",
                  "Resource": [
                    "arn:aws:s3::*:membership-dist/*",
                    {
                      "Fn::Sub": "arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/${Stage}/zuoraRest-${Stage}.*.json"
                    },
                    {
                      "Fn::Sub": "arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/${Stage}/trustedApi-${Stage}.*.json"
                    },
                    {
                      "Fn::Sub": "arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/${Stage}/stripe-${Stage}.*.json"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "ServerlessRestApiDeployment45fedb208d": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "RestApi deployment id: 45fedb208de69ace067ba60ae4d29087edefe972",
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Stage"
      }
    },
    "PaymentIntentIssuesLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "PaymentIntentIssuesLambdaRolePolicy1",
            "PolicyDocument": {
              "Statement": {
                "Effect": "Allow",
                "Action": [
                  "ssm:GetParametersByPath"
                ],
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/membership/payment-intent-issues"
                  }
                ]
              }
            }
          },
          {
            "PolicyName": "PaymentIntentIssuesLambdaRolePolicy2",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:GetObject",
                  "Resource": [
                    "arn:aws:s3::*:membership-dist/*"
                  ]
                }
              ]
            }
          }
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "ServerlessRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/customer-updated": {
              "post": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CustomerUpdatedLambda.Arn}/invocations"
                  }
                },
                "responses": {},
                "parameters": [
                  {
                    "required": false,
                    "type": "string",
                    "name": "apiToken",
                    "in": "query"
                  }
                ]
              }
            },
            "/payment-intent-issue": {
              "post": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PaymentIntentIssuesLambda.Arn}/invocations"
                  }
                },
                "responses": {}
              }
            }
          },
          "swagger": "2.0"
        }
      }
    },
    "PaymentIntentIssuesLambdaAcquisitionEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "PaymentIntentIssuesLambda"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/payment-intent-issue",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    }
  },
  "Conditions": {
    "IsProd": {
      "Fn::Equals": [
        {
          "Ref": "Stage"
        },
        "PROD"
      ]
    }
  }
}