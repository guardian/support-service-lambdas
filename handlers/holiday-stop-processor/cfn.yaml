AWSTemplateFormatVersion: "2010-09-09"
Description: Updates subscriptions with outstanding holiday stops.

Parameters:

  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - CODE
      - PROD
    Default: CODE

Conditions:
  IsProd: !Equals [!Ref "Stage", "PROD"]

Resources:

  HolidayStopProcessorRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: HolidayStopProcessorPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/holiday-stop-processor-${Stage}:log-stream:*
        - PolicyName: ReadZuoraCredentials
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource: !Sub arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/${Stage}/zuoraRest-${Stage}*.json
        - PolicyName: ReadSalesforceCredentials
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource: !Sub arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/${Stage}/sfAuth-${Stage}*.json

  HolidayStopProcessor:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName:
        !Sub holiday-stop-processor-${Stage}
      Description: Updates subscriptions with outstanding holiday stops. Source - https://github.com/guardian/support-service-lambdas/tree/master/handlers/holiday-stop-processor
      Code:
        S3Bucket: support-service-lambdas-dist
        S3Key: !Sub membership/${Stage}/holiday-stop-processor/holiday-stop-processor.jar
      Handler: com.gu.holidaystopprocessor.Handler::handle
      Environment:
        Variables:
          Stage: !Ref Stage
      Role:
        !GetAtt HolidayStopProcessorRole.Arn
      MemorySize: 512
      Runtime: java8
      Timeout: 60
    DependsOn:
      - HolidayStopProcessorRole

  HolidayStopProcessorFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProd
    Properties:
      AlarmName: holiday-stop-processor-failure-alarm
      AlarmDescription:
        Failed to process holiday stops.
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:fulfilment-dev
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref HolidayStopProcessor
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    DependsOn:
      - HolidayStopProcessor

  HolidayStopProcessorScheduleRule:
    Type: AWS::Events::Rule
    Condition: IsProd
    Properties:
      Description: Trigger processing of holiday stops every hour (to give 24 attempts a day)
      Name: holiday-stop-processor-schedule
      ScheduleExpression: "cron(0 * ? * * *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt HolidayStopProcessor.Arn
          Id: !Ref HolidayStopProcessor
          Input: "null"
    DependsOn:
      - HolidayStopProcessor

  HolidayStopProcessorLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Condition: IsProd
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !Ref HolidayStopProcessor
      Principal: events.amazonaws.com
      SourceArn: !GetAtt HolidayStopProcessorScheduleRule.Arn
    DependsOn:
      - HolidayStopProcessor
      - HolidayStopProcessorScheduleRule
