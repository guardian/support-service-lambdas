Transform: AWS::Serverless-2016-10-31

Description: >
  Suspends fulfilment of digital voucher subscriptions.
  Source: https://github.com/guardian/support-service-lambdas/tree/main/handlers/digital-voucher-suspension-processor

Parameters:

  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - PROD
      - CODE
    Default: CODE

Mappings:

  StageMap:
    CODE:
      SalesforceUrl: https://test.salesforce.com
      SalesforceConnectedApp: AwsConnectorSandbox
      ImovoUrlVersion: 1
    PROD:
      SalesforceUrl: https://gnmtouchpoint.my.salesforce.com
      SalesforceConnectedApp: TouchpointUpdate
      ImovoUrlVersion: 2

Conditions:
  IsProd: !Equals [!Ref "Stage", "PROD"]

Resources:

  SuspensionLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub digital-voucher-suspension-processor-${Stage}
      Description: >
        Suspends fulfilment of digital voucher subscriptions.
        Source: https://github.com/guardian/support-service-lambdas/tree/main/handlers/digital-voucher-suspension-processor.
      Runtime: java8
      MemorySize: 1536
      Timeout: 900
      CodeUri:
        Bucket: support-service-lambdas-dist
        Key: !Sub membership/${Stage}/digital-voucher-suspension-processor/digital-voucher-suspension-processor.jar
      Handler: com.gu.digitalvouchersuspensionprocessor.Handler::handleRequest
      Environment:
        Variables:
          salesforceUrl: !FindInMap [ StageMap, !Ref Stage, SalesforceUrl ]
          salesforceClientId:
            !Sub
            - '{{resolve:secretsmanager:${Stage}/Salesforce/ConnectedApp/${ConnectedApp}:SecretString:clientId}}'
            - ConnectedApp: !FindInMap [StageMap, !Ref Stage, SalesforceConnectedApp]
          salesforceClientSecret:
            !Sub
            - '{{resolve:secretsmanager:${Stage}/Salesforce/ConnectedApp/${ConnectedApp}:SecretString:clientSecret}}'
            - ConnectedApp: !FindInMap [StageMap, !Ref Stage, SalesforceConnectedApp]
          salesforceUserName: !Sub '{{resolve:secretsmanager:${Stage}/Salesforce/User/MembersDataAPI:SecretString:username}}'
          salesforcePassword: !Sub '{{resolve:secretsmanager:${Stage}/Salesforce/User/MembersDataAPI:SecretString:password}}'
          salesforceToken: !Sub '{{resolve:secretsmanager:${Stage}/Salesforce/User/MembersDataAPI:SecretString:token}}'
          imovoUrl:
            !Sub
            - '{{resolve:ssm:/${Stage}/membership/support-service-lambdas-shared-imovo/imovoBaseUrl:${Version}}}'
            - Version: !FindInMap [StageMap, !Ref Stage, ImovoUrlVersion]
          imovoApiKey: !Sub '{{resolve:secretsmanager:${Stage}/Imovo:SecretString:apiKey}}'

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: SuspensionLambda
    Properties:
      LogGroupName: !Sub /aws/lambda/digital-voucher-suspension-processor-${Stage}
      RetentionInDays: 90

  LambdaAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: SuspensionLambda
    Condition: IsProd
    Properties:
      AlarmName: "URGENT 9-5 - PROD: Failed to suspend digital voucher subscriptions"
      AlarmDescription: >
        IMPACT: If this goes unaddressed at least one subscription
        that was supposed to be suspended will be fulfilled.
        For troubleshooting, see
        https://github.com/guardian/support-service-lambdas/blob/main/handlers/digital-voucher-suspension-processor/README.md.
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:fulfilment-dev
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref SuspensionLambda
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching

  LambdaScheduleRule:
    Type: AWS::Events::Rule
    DependsOn: SuspensionLambda
    Properties:
      Description: Triggers hourly processing of digital voucher suspensions.
      ScheduleExpression: "rate(1 hour)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt SuspensionLambda.Arn
          Id: !Ref SuspensionLambda
          Input: "null"

  LambdaSchedulePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SuspensionLambda
      - LambdaScheduleRule
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !Ref SuspensionLambda
      Principal: events.amazonaws.com
      SourceArn: !GetAtt LambdaScheduleRule.Arn
