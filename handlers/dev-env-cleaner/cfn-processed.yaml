{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lambda for cleaning up SF CODE",
  "Parameters": {
    "Stage": {
      "Description": "Stage name",
      "Type": "String",
      "AllowedValues": [
        "PROD",
        "CODE"
      ],
      "Default": "CODE"
    }
  },
  "Mappings": {
    "Stages": {
      "Schedule": {
        "CODE": "rate(365 days)",
        "PROD": "rate(12 hours)"
      }
    },
    "Constants": {
      "Alarm": {
        "Process": "See the wiki at https://github.com/guardian/support-frontend/wiki/Automated-IT-Tests"
      }
    }
  },
  "Resources": {
    "LambdaLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "DependsOn": "LambdaFunction",
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": "/aws/lambda/dev-env-cleaner-${Stage}"
        },
        "RetentionInDays": 90
      }
    },
    "NotRunningAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Condition": "ProdOnlyResource",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:reader-revenue-dev"
          }
        ],
        "AlarmName": {
          "Fn::Join": [
            " ",
            [
              "non urgent -",
              "CODE env cleaner is not completing"
            ]
          ]
        },
        "AlarmDescription": {
          "Fn::Join": [
            " ",
            [
              "Impact - SF CODE will gradually fill up unless this is fixed",
              {
                "Fn::FindInMap": [
                  "Constants",
                  "Alarm",
                  "Process"
                ]
              }
            ]
          ]
        },
        "Metrics": [
          {
            "Id": "total",
            "Expression": "FILL(m1,0)",
            "Label": "RunCount"
          },
          {
            "Id": "m1",
            "ReturnData": false,
            "MetricStat": {
              "Metric": {
                "Namespace": "support-service-lambdas",
                "MetricName": "cleanup-succeeded",
                "Dimensions": [
                  {
                    "Name": "Stage",
                    "Value": {
                      "Ref": "Stage"
                    }
                  },
                  {
                    "Name": "app",
                    "Value": "dev-env-cleaner"
                  }
                ]
              },
              "Stat": "Sum",
              "Period": 3600,
              "Unit": "Count"
            }
          }
        ],
        "ComparisonOperator": "LessThanThreshold",
        "Threshold": 1,
        "EvaluationPeriods": 24,
        "TreatMissingData": "breaching"
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "support-service-lambdas-dist",
          "S3Key": {
            "Fn::Sub": "membership/${Stage}/dev-env-cleaner/dev-env-cleaner.jar"
          }
        },
        "Description": "Cleans up SF CODE (via zuora)",
        "FunctionName": {
          "Fn::Sub": "dev-env-cleaner-${Stage}"
        },
        "Handler": "com.gu.cleaner.Handler::handleRequest",
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "LambdaFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "java11",
        "Timeout": 900,
        "Environment": {
          "Variables": {
            "Stage": {
              "Ref": "Stage"
            }
          }
        },
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "LambdaFunctionEventInvokeConfig": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "DestinationConfig": {},
        "FunctionName": {
          "Ref": "LambdaFunction"
        },
        "MaximumRetryAttempts": 2,
        "Qualifier": "$LATEST"
      }
    },
    "LambdaFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "LambdaFunctionRolePolicy0",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "lambda:InvokeFunction"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dev-env-cleaner-${Stage}:log-stream:*"
                  }
                }
              ]
            }
          },
          {
            "PolicyName": "LambdaFunctionRolePolicy1",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:GetObject",
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/CODE/zuoraRest-CODE.v1.json"
                    }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "LambdaFunctionRolePolicy2",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "cloudwatch:PutMetricData",
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "LambdaFunctionRerunTests": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "clean zuora CODE regularly so that space in SF is cleaned up",
        "ScheduleExpression": {
          "Fn::FindInMap": [
            "Stages",
            "Schedule",
            {
              "Ref": "Stage"
            }
          ]
        },
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "LambdaFunction",
                "Arn"
              ]
            },
            "Id": "LambdaFunctionRerunTestsLambdaTarget"
          }
        ]
      }
    },
    "LambdaFunctionRerunTestsPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "LambdaFunction"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "LambdaFunctionRerunTests",
            "Arn"
          ]
        }
      }
    }
  },
  "Conditions": {
    "ProdOnlyResource": {
      "Fn::Equals": [
        {
          "Ref": "Stage"
        },
        "PROD"
      ]
    }
  }
}