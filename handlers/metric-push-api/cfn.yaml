AWSTemplateFormatVersion: "2010-09-09"
Description: HTTP API to push a metric to cloudwatch so we can alarm on errors

Parameters:
    Stage:
        Description: Stage name
        Type: String
        AllowedValues:
            - PROD
            - CODE

Mappings:
    StageMap:
        CODE:
            ApiName: metric-push-api-api-CODE
            DomainName: metric-push-api-code.support.guardianapis.com
            AlarmActionsEnabled: FALSE
        PROD:
            ApiName: metric-push-api-api-PROD
            DomainName: metric-push-api-prod.support.guardianapis.com
            AlarmActionsEnabled: TRUE
    Constants:
      Alarm:
        Process: Follow the process in https://docs.google.com/document/d/1_3El3cly9d7u_jPgTcRjLxmdG2e919zCLvmcFCLOYAk/edit
        Urgent: URGENT 9-5 -

Resources:

    MetricPushProxyResource:
        Type: AWS::ApiGateway::Resource
        Properties:
            RestApiId: !Ref MetricPushAPI
            ParentId: !GetAtt [MetricPushAPI, RootResourceId]
            PathPart: metric-push-api
        DependsOn: MetricPushAPI

    MetricPushMethod:
        Type: AWS::ApiGateway::Method
        Properties:
            AuthorizationType: NONE
            ApiKeyRequired: false
            RestApiId: !Ref MetricPushAPI
            ResourceId: !Ref MetricPushProxyResource
            HttpMethod: GET
            Integration:
              Type: MOCK
              RequestTemplates:
                application/json: '{"statusCode": 200}'
              IntegrationResponses:
                - StatusCode: 204
                  ResponseParameters:
                    method.response.header.Cache-control: '''no-cache'''
            MethodResponses:
              - StatusCode: 204
                ResponseParameters:
                  method.response.header.Cache-control: true
        DependsOn:
        - MetricPushAPI
        - MetricPushProxyResource

    MetricPushAPI:
        Type: "AWS::ApiGateway::RestApi"
        Properties:
            Description: HTTP API to push a metric to cloudwatch so we can alarm on errors
            Name: !FindInMap [StageMap, !Ref Stage, ApiName]

    MetricPushAPIStage:
        Type: AWS::ApiGateway::Stage
        Properties:
            Description: Stage for metric-push-api
            RestApiId: !Ref MetricPushAPI
            DeploymentId: !Ref MetricPushAPIDeployment
            StageName: !Sub ${Stage}
            MethodSettings:
            - ResourcePath: '/*'
              HttpMethod: '*'
              LoggingLevel: ERROR
              DataTraceEnabled: true
        DependsOn: MetricPushMethod

    MetricPushAPIDeployment:
        Type: AWS::ApiGateway::Deployment
        Properties:
            Description: Deploys metric-push-api into an environment/stage
            RestApiId: !Ref MetricPushAPI
        DependsOn: MetricPushMethod

    MetricPushDomainName:
      Type: "AWS::ApiGateway::DomainName"
      Properties:
        RegionalCertificateArn: # only for *.support.guardianapis.com
          !Sub arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/b384a6a0-2f54-4874-b99b-96eeff96c009
        DomainName: !FindInMap [ StageMap, !Ref Stage, DomainName ]
        EndpointConfiguration:
          Types:
            - REGIONAL

    MetricPushBasePathMapping:
      Type: "AWS::ApiGateway::BasePathMapping"
      Properties:
        RestApiId: !Ref MetricPushAPI
        DomainName: !Ref MetricPushDomainName
        Stage: !Sub ${Stage}
      DependsOn:
      - MetricPushAPI
      - MetricPushAPIStage
      - MetricPushDomainName