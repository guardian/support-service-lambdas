Description: When braze uploads file to S3 bucket, trigger a Lambda event which uploads file to Salesforce

Parameters:
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - CODE
      - PROD
    Default: CODE

Conditions:
  IsProd: !Equals [!Ref "Stage", "PROD"]

Mappings:
  BucketNameByStageMap:
    CODE:
      "bucketName": "braze-to-salesforce-file-upload-code"
    PROD:
      "bucketName": "braze-to-salesforce-file-upload-prod"

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    DependsOn: BucketPermission
    Properties:
      BucketName: !FindInMap [BucketNameByStageMap, !Ref Stage, bucketName]
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Function: !GetAtt BucketWatcher.Arn

  BucketPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref BucketWatcher
      Principal: s3.amazonaws.com
      SourceAccount: !Ref "AWS::AccountId"
      SourceArn: !Sub
        - "arn:aws:s3:::${BucketName}"
        - { BucketName: !FindInMap [BucketNameByStageMap, !Ref Stage, bucketName] }

  BucketWatcher:
    Type: AWS::Lambda::Function
    Properties:
      Description: Upload file to Salesforce
      FunctionName: !Sub braze-to-salesforce-file-upload-${Stage}
      Code:
        S3Bucket: zuora-auto-cancel-dist
        S3Key: !Sub membership/${Stage}/braze-to-salesforce-file-upload/braze-to-salesforce-file-upload.jar
      Handler: com.gu.salesforce.braze.upload.UploadFileToSalesforceLambda::handle
      Environment:
        Variables:
          Stage: !Ref Stage
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: java8
      MemorySize: 1536
      Timeout: 60

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: {Service: [lambda.amazonaws.com]}
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: S3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub
                    - "arn:aws:s3:::${BucketName}"
                    - {BucketName: !FindInMap [BucketNameByStageMap, !Ref Stage, bucketName]}
                  - !Sub
                    - "arn:aws:s3:::${BucketName}/*"
                    - {BucketName: !FindInMap [BucketNameByStageMap, !Ref Stage, bucketName]}

        - PolicyName: ReadPrivateCredentials
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource: !Sub arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/${Stage}/sfAuth-${Stage}*.json

  FailedUploadAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProd
    Properties:
      AlarmName: braze-to-salesforce-file-upload
      AlarmDescription: >
        Failed to upload file from braze to Salesforce.
        Latcham will not be able to send physical letters.
        Refer to https://github.com/guardian/zuora-auto-cancel/blob/master/handlers/braze-to-salesforce-file-upload/README.md
        on how to debug and retry.
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MarioTest
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref BucketWatcher
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching

  BrazeUser:
    Type: AWS::IAM::User
    Properties:
      Path: "/"
  BrazeUserKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      Serial: 1
      UserName: !Ref BrazeUser
  BrazeUserPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Users:
        - !Ref BrazeUser
      PolicyName: BrazeToSalesforceFileUploadPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetBucketLocation
            Resource: !Sub
              - "arn:aws:s3:::${BucketName}"
              - {BucketName: !FindInMap [BucketNameByStageMap, !Ref Stage, bucketName]}
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource: !Sub
              - "arn:aws:s3:::${BucketName}/*"
              - {BucketName: !FindInMap [BucketNameByStageMap, !Ref Stage, bucketName]}

Outputs:
  BrazeAwsAccessId:
    Value: !Ref BrazeUserKeys
  BrazeAwsSecretAccessKey:
    Value: !GetAtt BrazeUserKeys.SecretAccessKey
  BrazeAwsS3BucketName:
    Value: !FindInMap [BucketNameByStageMap, !Ref Stage, bucketName]

