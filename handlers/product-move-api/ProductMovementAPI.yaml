openapi: 3.0.3

info:
  title: Product Movement API
  description:
    API to facilitate replacing an existing subscription
    with another subscription for a different type of product.
  version: 0.0.1

paths:

  /available-product-moves/{subscriptionName}:
    get:
      summary: Gets available products that can be moved to from the given subscription.
      description:
        Returns an array of eligible products that the given subscription could be moved to,
        which will be empty if there aren't any for the given subscription.
      parameters:
        - name: subscriptionName
          in: path
          description: Name of subscription whose eligibility for movement is to be checked.
          example: A-S000001
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'
        404:
          description: No such subscription.
        500:
          description: Unable to respond.
        502:
          description: Bad response from an upstream system.
        504:
          description: Timeout from an upstream system.

  /product-move/{subscriptionName}:
    post:
      summary: Replaces the existing subscription with a new one.
      description:
        Cancels the existing subscription and replaces it with a new subscription
        to a different type of product.
        Also manages all the service comms associated with the movement.
      parameters:
        - name: subscriptionName
          in: path
          description: Name of subscription to be moved to a different product.
          example: A-S000001
          required: true
          schema:
            type: string
      requestBody:
        description: Definition of required movement.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targetProductId
              properties:
                targetProductId:
                  description: ID of target product that new subscription will be for.
                  type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - newSubscriptionName
                  - newProduct
                properties:
                  newSubscriptionName:
                    description: Name of new subscription.
                    type: string
                  newProduct:
                    $ref: '#/components/schemas/product'
        400:
          description: Request doesn't make sense.
        500:
          description: Unable to respond.
        502:
          description: Bad response from an upstream system.
        504:
          description: Timeout from an upstream system.

components:
  schemas:

    timePeriod:
      type: object
      required:
        - name
        - count
      properties:
        name:
          description: Time units.
          example: Months
          type: string
        count:
          description: Number of time units in this time period.
          type: integer

    billing:
      description: Amount and frequency of billing.
      type: object
      required:
        - currency
        - startDate
      properties:
        amount:
          type: number
          description:
            Absolute amount that will be billed.
            Either this field or the percentage field will be populated.
          example: 11.99
        percentage:
          type: integer
          description:
            Percentage of standard amount that will be billed.
            This field only makes sense if the billing object is attached to an introductory offer.
            Either this field or the amount field will be populated.
          example: 50
        currency:
          type: object
          required:
            - code
            - symbol
          properties:
            code:
              type: string
              description: ISO 4217 alphabetic currency code.
              example: GBP
            symbol:
              type: string
              description: ISO 4217 currency symbol.
              example: 'Â£'
        frequency:
          $ref: '#/components/schemas/timePeriod'
        startDate:
          type: string
          description: Date on which first service period for product subscription begins.
          example: 2022-06-21

    trial:
      description:
        An optional free trial that begins when a subscription begins
        and lasts for a given period of time.
      type: object
      required:
        - duration
      properties:
        duration:
          $ref: '#/components/schemas/timePeriod'

    offer:
      description:
        An optional special offer that begins either when a subscription begins
        or at the end of a free trial
        and lasts for a given period of time.
      type: object
      required:
        - billing
        - duration
      properties:
        billing:
          $ref: '#/components/schemas/billing'
        duration:
          $ref: '#/components/schemas/timePeriod'

    product:
      description: A product that's available for subscription.
      type: object
      required:
        - id
        - name
        - billing
      properties:
        id:
          type: string
          description: ID of product in Zuora product catalogue.
        name:
          type: string
          description: Name of product in Zuora product catalogue.
          example: Digital Pack
        billing:
          $ref: '#/components/schemas/billing'
        trial:
          $ref: '#/components/schemas/trial'
        introOffer:
          $ref: '#/components/schemas/offer'
