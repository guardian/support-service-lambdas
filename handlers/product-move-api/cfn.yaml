AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: Endpoints to handle product movement, initially recurring contribution to digi sub

Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: membership
  Stage:
    Description: Set by RiffRaff on each deploy
    Type: String
    AllowedValues:
      - DEV
      - CODE
      - PROD
  DeployBucket:
    Description: Bucket to copy files to
    Type: String
    Default: support-service-lambdas-dist

Conditions:
  IsProd: !Equals [ !Ref Stage, "PROD" ]

Resources:

  ProductMoveApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      OpenApiVersion: 3.0.1
      Name: !Sub product-move-api-${Stage}-ApiGateway
      StageName: !Sub ${Stage}
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
          UsagePlanName: !Sub product-move-api-${Stage}-UsagePlan
          Description: !Sub Usage plan for product-move-api-${Stage}

  ProductMoveApiLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub move-product-${Stage}
      Description: A lambda for handling product movement API requests
      Runtime: java11
      Architectures: [arm64]
      Handler: com.gu.productmove.Handler::handleRequest
      MemorySize: 1024
      Timeout: 300
      Environment:
        Variables:
          App: product-move-api
          Stack: !Ref Stack
          Stage: !Ref Stage
      CodeUri:
        Bucket: !Ref DeployBucket
        Key: !Sub ${Stack}/${Stage}/product-move-api/product-move-api.jar
      Policies:
      - Statement:
          Effect: Allow
          Action:
            - sqs:GetQueueUrl
            - sqs:SendMessage
          Resource:
            - arn:aws:sqs:eu-west-1:865473395570:contributions-thanks
            - arn:aws:sqs:eu-west-1:865473395570:contributions-thanks-dev
            - !GetAtt RefundQueue.Arn
            - !GetAtt SalesforceTrackingQueue.Arn
      - AWSLambdaBasicExecutionRole
      - Statement:
          Effect: Allow
          Action: s3:GetObject
          Resource:
            - !Sub arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/${Stage}/zuoraRest-${Stage}*.json
            - !Sub arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/${Stage}/invoicingApi-${Stage}*.json
      - Statement:
        - Effect: Allow
          Action: s3:GetObject
          Resource:
            - arn:aws:s3::*:membership-dist/*
      - Statement:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:UpdateItem
          Resource:
            - Fn::ImportValue: !Sub supporter-product-data-tables-${Stage}-SupporterProductDataTable
      Events:
        DocsRedirect:
          Type: Api
          Properties:
            Path: '/docs'
            Method: any
            Auth:
              ApiKeyRequired: false
            RestApiId:
              Ref: ProductMoveApiGateway
        Docs:
          Type: Api
          Properties:
            Path: '/docs/{proxy+}'
            Method: any
            Auth:
              ApiKeyRequired: false
            RestApiId:
              Ref: ProductMoveApiGateway
        ProductMovement:
          Type: Api
          Properties:
              Path: '/{proxy+}'
              Method: any
              Auth:
                ApiKeyRequired: true
              RestApiId:
                Ref: ProductMoveApiGateway

  RefundLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub product-switch-refund-${Stage}
      Description: An SQS-triggered lambda that refunds customer's going through product-switching
      Runtime: java11
      Handler: com.gu.productmove.refund.RefundHandler::handleRequest
      MemorySize: 1024
      Timeout: 300
      Environment:
        Variables:
          App: product-move-api
          Stack: !Ref Stack
          Stage: !Ref Stage
      CodeUri:
        Bucket: !Ref DeployBucket
        Key: !Sub ${Stack}/${Stage}/product-move-api/product-move-api.jar
      Policies:
      - AWSLambdaBasicExecutionRole
      - Statement:
          Effect: Allow
          Action: s3:GetObject
          Resource:
            - !Sub arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/${Stage}/zuoraRest-${Stage}*.json
            - !Sub arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/${Stage}/invoicingApi-${Stage}*.json
            - arn:aws:s3::*:membership-dist/*
      - Statement:
          Effect: Allow
          Action:
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
            - sqs:ReceiveMessage
          Resource: "*"

  RefundQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 3000
      QueueName: !Sub product-switch-refund-${Stage}

  SQSTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt RefundQueue.Arn
      FunctionName: !Ref RefundLambda

  SalesforceTrackingLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub product-switch-salesforce-tracking-${Stage}
      Description: An SQS-triggered lambda that refunds customer's going through product-switching
      Runtime: java11
      Handler: com.gu.productmove.salesforce.SalesforceHandler::handleRequest
      MemorySize: 1024
      Timeout: 300
      Environment:
        Variables:
          App: product-move-api
          Stack: !Ref Stack
          Stage: !Ref Stage
      CodeUri:
        Bucket: !Ref DeployBucket
        Key: !Sub ${Stack}/${Stage}/product-move-api/product-move-api.jar
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            Effect: Allow
            Action: s3:GetObject
            Resource:
              - !Sub arn:aws:s3:::gu-reader-revenue-private/membership/support-service-lambdas/${Stage}/sfAuth-${Stage}*.json
              - arn:aws:s3::*:membership-dist/*
        - Statement:
            Effect: Allow
            Action:
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ReceiveMessage
            Resource: "*"

  SalesforceTrackingQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 3000
      QueueName: !Sub product-switch-salesforce-tracking-${Stage}

  SQSTriggerSF:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt SalesforceTrackingQueue.Arn
      FunctionName: !Ref SalesforceTrackingLambda

  # alarms
  ProductMovementFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:reader-revenue-dev
      AlarmName: An error in the Product Move lambda. Please check the logs to diagnose
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref ProductMoveApiLambda
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching

  RefundLambdaFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:reader-revenue-dev
      AlarmName: An error in the Refund lambda. Please check the logs to diagnose
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref RefundLambda
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching

  5xxApiAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProd
    DependsOn:
      - ProductMoveApiGateway
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:retention-dev
      AlarmName:
        !Sub The product-move-api returned a 500 response
      AlarmDescription: Check the logs for details - https://eu-west-1.console.aws.amazon.com/cloudwatch/home?region=eu-west-1#logsV2:log-groups/log-group/$252Faws$252Flambda$252Fmove-product-PROD
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ApiName
          Value: !Sub product-move-api-${Stage}-ApiGateway
        - Name: Stage
          Value: !Sub ${Stage}
      EvaluationPeriods: 1
      MetricName: 5XXError
      Namespace: AWS/ApiGateway
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching

  4xxApiAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProd
    DependsOn:
      - ProductMoveApiGateway
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:retention-dev
      AlarmName: !Sub The product-move-api returned multiple 4xx responses
      AlarmDescription: Check the logs for details - https://eu-west-1.console.aws.amazon.com/cloudwatch/home?region=eu-west-1#logsV2:log-groups/log-group/$252Faws$252Flambda$252Fmove-product-PROD
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ApiName
          Value: !Sub product-move-api-${Stage}-ApiGateway
        - Name: Stage
          Value: !Sub ${Stage}
      EvaluationPeriods: 1
      MetricName: 4XXError
      Namespace: AWS/ApiGateway
      Period: 3600
      Statistic: Sum
      Threshold: 3
      TreatMissingData: notBreaching