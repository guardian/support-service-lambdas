#!/bin/bash -e
# generates a typescript file with all the template files imported
script_name=$(basename "$0")

echo "$script_name: START generating template list..."

script_dir=$(readlink -f "$(dirname "${BASH_SOURCE[0]}")")
src_dir=$(readlink -f "$script_dir/../src")
data_dir="$src_dir/data"
template_dir="$data_dir/template"
output_file="$data_dir/generated.ts"

template_files=()
while IFS= read -r -d '' file; do
    rel_path="${file#$template_dir/}"
    name_without_ext="${rel_path%.ts}"
    template_files+=("$name_without_ext")
done < <(find "$template_dir" -name "*.ts" -type f -print0 | sort -z)

echo -n "" > "$output_file" # empty the file
echo "import { Template } from '../util/templater';" >> "$output_file"
echo "" >> "$output_file"

# Generate imports
for name_without_ext in "${template_files[@]}"; do
    import_name=$(echo "$name_without_ext" | sed 's/[^a-zA-Z0-9]/_/g')
    echo "import $import_name from './template/$name_without_ext';"
done >> "$output_file"

echo "" >> "$output_file"
echo "/*" >> "$output_file"
echo " * This file is gitignored and edits will be overwritten." >> "$output_file"
echo " * Generated by $0" >> "$output_file"
echo " * Generated on $(date)" >> "$output_file"
echo " */" >> "$output_file"
echo "" >> "$output_file"

echo "const templates: Template[] = [" >> "$output_file"

# Generate array entries
for name_without_ext in "${template_files[@]}"; do
    import_name=$(echo "$name_without_ext" | sed 's/[^a-zA-Z0-9]/_/g')
    echo "  { name: \"$name_without_ext\", template: $import_name },"
done >> "$output_file"

echo "];" >> "$output_file"
echo "" >> "$output_file"
echo "export default templates;" >> "$output_file"

echo "$script_name: FINISH wrote ${#template_files[@]} templates to $output_file"
